name: DataVectorProjection
version: 0.0.1
date: 01/06/2021
author: Arnaud de Mattia
maintainer: Arnaud de Mattia
description: Project model onto the same basis as the data vector
requirements: []

long description: >
                  Typically model lives in (k,mu) or (s,mu) space and
                  the data vector is expressed in multipoles, or :math:`\mu`-wedges.
                  This module takes care of the conversion between these two spaces.

options:
  integration:
    type: [list, dict]
    default: None
    description: options for integration from :math:`(x,\mu)` space to projection space (multipoles, wedges...)
  projs:
    type: list
    default: None
    description: list of projections (e.g. ['ell_0','mu_1/3_2/3']).
                If ``None``, the projections of the current data vector are used.
  x:
    type: [dict, list, float_array]
    default: None
    description: >
                an array, a list of arrays (for the different projections), a dictionary or a list of dictionary,
                to define the ``x``-axis sampling of the model (e.g. to get smooth model curves).
                If a dictionary is provided, should contain 'min', 'max', 'nbins' or 'step' (optionally 'scale': 'lin' or 'log').
                If ``None``, the coordinates of the data vector are used.

setup input:
  data.data_vector:
    type: DataVector
    description: Data vector

execute input:
  model.y_callable:
    type: callable
    description: Power spectrum model

execute output:
  model.y:
    type: numpy array
    description: Model vector
