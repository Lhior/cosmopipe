name: DataVector
version: 0.0.1
date: 01/06/2021
author: Arnaud de Mattia
maintainer: Arnaud de Mattia
description: Load a data vector


options:
  xlim:
    type: [dict, list]
    default: None
    description: "dictionary holding projection names and corresponding tuple of limits (e.g. {'ell_0':(0.,0.2),'ell_2':(0.,0.1)})
                or list of tuples corresponding to the data projections"
  projs:
    type: dict
    default: {}
    description: "dictionary holding a mapping between projection names and projection attributes to be added to the corresponding projections (e.g.: shotnoise?)"
  data_load:
    type: string
    default: data_vector
    description: either (section, name) in data_block where to find the data vector or, if containing / (or \), a path to a data vector on disk.
                If path ends with .npy, none of the arguments below apply.
  comments:
    type: string
    default: '#'
    description: the characters used to indicate the start of a comment
  skip_rows:
    type: int
    default: 0
    description: skip the first skiprows lines, including comments
  max_rows:
    type: int
    default: None
    description: read max_rows lines of content after skiprows lines. The default is to read all the lines
  usecols:
    type: list
    default: None
    description: if not ``None``, list of columns to read the data vector from
  columns:
    type: list
    default: None
    description: column names corresponding to ``usecols``. Columns 'x' and 'y' are used as x- and y-coordinates.
  mapping_header:
    type: dict
    default: None
    description: dictionary holding keyword:regex mapping or (regex, type) to provide the type.
                The corresponding values will be saved in the :attr:`attrs` dictionary
  mapping_proj:
    type: dict
    default: None
    description: "dictionary holding a mapping from column name to projection specifier (e.g. 'ell_0', ['muwedge', [0.0,0.2]], or with a name, e.g.: 'ELG_ell_0', ['ELG','muwedge',[0.0,0.2]])"
  attrs:
    type: dict
    default: {}
    description: global attributes for DataVector


setup output:
  data.data_vector:
    type: cosmopipe.lib.data.DataVector
    description: Data vector
  data.y:
    type: float_array
    description: array view of the y-coordinate of the data vector
