name: CovarianceMatrix
version: 0.0.1
date: 01/06/2021
author: Arnaud de Mattia
maintainer: Arnaud de Mattia
description: Load a covariance matrix


options:
  projs_attrs:
    ${data_vector.yaml:options.xlim}:
  projs_attrs:
    ${data_vector.yaml:options.projs_attrs}:
  covariance_load:
    type: string
    description: either (section, name) in data_block where to find the covariance matrix or, if containing / (or \), a path to a covariance matrix on disk.
                If path ends with .npy, none of the arguments below apply.
  comments:
    type: string
    default: '#'
    description: the characters used to indicate the start of a comment
  usecols:
    type: list
    default: None
    description: which columns to read, with 0 being the first. If ``None``, reads all columns. Last column must be the covariance value.
  skip_rows:
    type: int
    default: 0
    description: skip the first skip_rows lines, including comments
  max_rows:
    type: int
    default: None
    description: read max_rows lines of content after skip_rows lines. The default is to read all the lines
  mapping_header:
    type: dict
    default: None
    description: dictionary holding keyword:regex mapping or (regex, type) to provide the type.
                The corresponding values will be saved in the :attr:`attrs` dictionary
  columns:
    type: [list, tuple]
    default: None
    description: column names corresponding to ``usecols``. Can be a tuple of column lists for two different data vectors.
                Columns 'x' and 'y' are used as x- and y-coordinates for each data vector.
  mapping_proj:
    type: [dict, list]
    default: None
    description: list of projection names (considered of the same size), or dictionary holding a mapping from projection specifier (e.g. 'ell_0')
          to the number of points for this projection (e.g. ``{'ell_0':10, 'ell_2':4}`` for a matrix of total size 14 x 14).
  data:
    type: dict
    default: None
    description: dictionary to load the data vector matching the provided covariance matrix, in which case 'x' columns of the covariance file are expected to be indices of the data vector.
  attrs:
    type: dict
    default: {}
    description: global attributes for CovarianceMatrix

setup output:
  covariance.covariance_matrix:
    type: cosmopipe.lib.data.CovarianceMatrix
    description: Covariance matrix
  covariance.cov:
    type: float_array
    description: array view of the covariance matrix
  covariance.invcov:
    type: float_array
    description: array view of the inverse covariance matrix
  covariance.nobs:
    type: int
    default: None
    description: number of observations (mocks) used to compute the covariance matrix (if from mocks)
