name: BoxPowerSpectrum
version: 0.0.1
date: 01/06/2021
author: Arnaud de Mattia
maintainer: Arnaud de Mattia
description: Estimate periodic box power spectrum using nbodykit
url: https://github.com/bccp/nbodykit
licence: GNUv3
bibtex: [arXiv:1712.05834v1, arXiv:1704.02357]
requirements: [nbodykit]

long description: >
                  Algorithm to compute 2d power spectrum and/or multipoles
                  in a periodic box, using a Fast Fourier Transform (FFT).
                  This computes the power spectrum as the square of the Fourier modes of the
                  density field, which are computed via a FFT.

options:
  Nmesh:
    type: [int, list]
    default: 512
    description: mesh size, i.e. number of mesh nodes along each axis
  BoxSize:
    type: [float, list]
    description: box size, i.e. physical extent in :math:`\mathrm{Mpc}/h` of the cartesian box along each axis
  resampler:
    type: string
    default: tsc
    choices: [tsc, cic, pcs]
    description: name of the resampler to use when interpolating the particles to the mesh
  interlaced:
    type: bool
    default: True
    description: whether to use interlacing to reduce aliasing when painting the particles on the mesh
  edges:
    type: dict
    default: {}
    description: >
                "dictionary options for k-edges: min: the edge of the first wavenumber bin (default: 0);
                max: the edge of the last wavenumber bin (default: Nyquist frequency :math:`\pi \mathrm{Nmesh} / \mathrm{BoxSize}`);
                step, the spacing in wavenumber (:math:`h/\mathrm{Mpc}`) (default: the fundamental mode :math:`2 \pi / \mathrm{BoxSize}` of the box)"
  muwedges:
    type: int
    default: 3
    description: :math:`\mu`-wedges to infer from multipole measurements
  ells:
    type: [list, tuple]
    default: [0,2,4]
    description: a list of integer multipole numbers :math:`\ell` to compute
  los:
    type: [string, list, tuple]
    default: x
    description: the direction to use as the line-of-sight, either an axis ('x', 'y', 'z') or a unit 3-vector.
  position:
    type: string
    default: None
    description: position column (in :math:`\mathrm{Mpc}/h`) in the input catalog(s).
                If not provided, cartesian positions are computed from z, ra, dec and the input fiducial cosmology
  data_load:
    type: [string, list, tuple]
    default: data
    description: either (section, name) (or name only; default section is 'catalog') in data_block where to find the data catalog(s) or, if containing / (or \), a path to a catalog on disk
                  A tuple of list of two strings can be provided for cross-correlations.
  save:
    type: string
    default: None
    description: if not ``None``, path where to save the power spectrum measurement

execute output:
  data.data_vector:
    type: cosmopipe.lib.data.DataVector
    description: power spectrum measurement
