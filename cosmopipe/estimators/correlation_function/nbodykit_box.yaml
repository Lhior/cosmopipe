name: BoxCorrelationFunction
version: 0.0.1
date: 01/06/2021
author: Arnaud de Mattia
maintainer: Arnaud de Mattia
description: Estimate correlation function using nbodykit
url: https://github.com/bccp/nbodykit
licence: GNUv3
bibtex: [arXiv:1712.05834v1, arXiv:1704.02357, arXiv:1911.03545v1]
requirements: [nbodykit]

long description: >
                  Compute the two-point correlation function for observational survey data
                  as a function of :math:`r`, :math:`(r, \mu)`, :math:`(r_{p}, \pi)`, or
                  :math:`\theta` using pair counting.
                  The natural estimator DD/RR - 1 is used to transform
                  pair counts in to the correlation function.


options:
  mode:
    type: string
    default: '2d'
    choices: ['1d', '2d', 'rppi', 'rp', 'angular']
    description: >
                  if '1d', compute pairs as a function of the 3D separation :math:`r`;
                  if '2d', compute pairs as a function of the 3D separation :math:`r` and the cosine of the angle to the line-of-sight, :math:`\mu`
                  if 'rppi', compute pairs as a function of distance perpendicular and parallel to the line-of-sight, :math:`r_{p}` and :math:`\pi`
                  if 'rp', same as 'rppi', but the correlation function is integrated over :math:`\pi`
                  if 'angular', compute pairs as a function of angle on the sky, :math:`\theta`
  pimax:
    type: float
    default: 80
    description: maximum line-of-sight separation (in `\mathrm{Mpc}/h`), in case ``mode`` is 'rppi' or 'rp'
  edges:
    type: [list, dict, array_1d]
    default: {min: 1e-12, max: 200, nbins: 50}
    description: >
                the separation bin edges along the first coordinate dimension;
                depending on ``mode``, the options are :math:`r`, :math:`r_{p}`, or
                :math:`\theta`. Expected units for distances are :math:`\mathrm{Mpc}/h`
                and degrees for angles.
                If a dictionary is provided, should contain 'min', 'max', 'nbins' (optionally 'scale': 'lin' or 'log')
  muwedges:
    type: int
    default: 3
    description: :math:`\mu`-wedges to infer from multipole measurements
  ells:
    type: [list, tuple]
    default: (0,2,4)
    description: a list of integer multipole numbers :math:`\ell` to compute
  show_progress:
    type: bool
    default: False
    description: >
                  if ``True``, perform the pair counting calculation in 10 iterations,
                  logging the progress after each iteration; this is useful for
                  understanding the scaling of the code
  nthreads:
    type: int
    default: 1
    description: number of OpenMP threads
  position:
    type: string
    default: None
    description: position column (in :math:`\mathrm{Mpc}/h`) in the input catalog(s).
                If not provided, cartesian positions are computed from z, ra, dec and the input fiducial cosmology
  load_data:
    type: [string, list, tuple]
    default: data
    description: either (section, name) in data_block where to find the data catalog(s) or, if containing / (or \), a path to a catalog on disk
                  A tuple of list of two strings can be provided for cross-correlations.
  save:
    type: string
    default: None
    description: if not ``None``, path where to save the correlation function (data_vector) measurement
  save_estimator:
    type: string
    default: None
    description: if not ``None``, path where to save the correlation function estimator (including all pair counts)

execute output:
  data.data_vector:
    type: cosmopipe.lib.data.DataVector
    description: correlation function measurement
  data.correlation_estimator:
    type: cosmopipe.lib.estimators.correlation_function.LandySzalayEstimator
    description: correlation function estimator, will all pair counts
