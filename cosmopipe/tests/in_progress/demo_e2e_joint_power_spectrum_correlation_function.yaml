data_dir: _data
samples_dir: _samples
plots_dir: _plots
catalog_dir: _catalog

main:
  $execute: [params, fiducial, primordial, minuit, fits_plotting, power_postprocessing, correlation_postprocessing]
  $[survey_selection.zeff]: 1.0

fitting:
  $module_name: pypescript
  $module_class: BasePipeline
  $modules: [minuit, fits_plotting]

power_postprocessing:
  $module_name: cosmopipe.pipelines.postprocessing
  $module_class: ProfilesPostprocessing
  $setup: [model]
  $execute: [model, power_data, projection, data_model_power_plotting]

correlation_postprocessing:
  $module_name: cosmopipe.pipelines.postprocessing
  $module_class: ProfilesPostprocessing
  $setup: [model]
  $execute: [model, correlation_data, hankel, projection, data_model_correlation_plotting]

minuit:
  $module_name: cosmopipe.samplers.profiler.minuit
  $module_class: MinuitProfiler
  $modules: [joint_like]
  migrad:
    n_iterations: 10
  $[covariance.covariance_matrix]: $[covariance.covariance_matrix]

params:
  $module_name: cosmopipe.parameters.parameterization
  base_parameters:
    galaxy_rsd.fsig:
      value: 0.5
      fixed: False
      prior:
        dist: uniform
        limits: [0.2, 0.8]
      latex: 'f\sigma_{8}'

fiducial:
  $module_name: cosmopipe.theory.primordial.fiducial
  engine: class

primordial:
  $module_name: cosmopipe.theory.primordial.primordial
  engine: class
  compute: pk_m

power_box_estimator:
  $module_name: cosmopipe.estimators.power_spectrum.nbodykit_box
  Nmesh: 128
  BoxSize: 1380.
  edges:
    step: 0.01
  position: 'Position + VelocityOffset[:,[0]]*[1,0,0]'
  data_load: f'${catalog_dir}/lognormal_box.fits'
  save: f'${data_dir}/lognormal_power_spectrum.txt'

power_data:
  $module_name: cosmopipe.data_vector.data_vector
  data_load: ${power_box_estimator.save}
  xlim: {'power_ell_0': [0.02, 0.3], 'power_ell_2': [0.02, 0.3]}

power_plotting:
  $module_name: cosmopipe.data_vector.plotting
  $module_class: DataVectorPlotting
  data_load: ${power_box_estimator.save}
  style: power
  kwplt: {'alpha': 0.3}
  filename: f'${plots_dir}/power_spectrum.png'

data_model_power_plotting:
  $module_name: cosmopipe.theory.plotting
  data_load: True
  covariance_load: True
  xmodel:
    nbins: 100
  style: power
  filename: f'${plots_dir}/e2e_power_spectrum_data_model.png'

joint_like:
  $module_name: cosmopipe.likelihood.likelihood
  $module_class: JointGaussianLikelihood
  $setup: [model.execute, power_like, model.execute, correlation_like, gaussiancov.execute]
  $execute: [model, power_like, correlation_like]
  $[covariance.covariance_matrix]: $[covariance.covariance_matrix]

power_like:
  $module_name: cosmopipe.likelihood.likelihood
  $module_class: BaseLikelihood
  #$setup: [power_box_estimator.execute, power_data.execute, power_plotting.execute]
  $setup: [power_data.execute]
  $modules: [projection]

correlation_survey_estimator:
  $module_name: cosmopipe.estimators.correlation_function.nbodykit_survey
  nbar: NZ
  data_load: f'${catalog_dir}/lognormal_data.fits'
  randoms_load: f'${catalog_dir}/lognormal_randoms.fits'
  save: f'${data_dir}/lognormal_correlation_function.txt'
  edges:
    min: 1e-9
    max: 20
    nbins: 10

correlation_data:
  $module_name: cosmopipe.data_vector.data_vector
  data_load: ${correlation_survey_estimator.save}
  xlim: {'corr_mu_2/3_1': [2, 100]}

correlation_plotting:
  $module_name: cosmopipe.data_vector.plotting
  $module_class: DataVectorPlotting
  data_load: ${correlation_survey_estimator.save}
  style: correlation
  projs: ['ell_0','ell_2','ell_4']
  kwplt: {'alpha': 0.3}
  filename: f'${plots_dir}/correlation_function.png'

data_model_correlation_plotting:
  $module_name: cosmopipe.theory.plotting
  data_load: True
  covariance_load: True
  xmodel:
    nbins: 100
  style: correlation
  filename: f'${plots_dir}/e2e_correlation_function_data_model.png'

fits_plotting:
  $module_name: cosmopipe.samplers.plotting
  $module_class: ProfilesPlotting
  save_stats: f'${plots_dir}/stats_linear.tex'
  toplot:
    - plot_aligned_stacked:
        truths: value
        filename: f'${plots_dir}/aligned_stacked_linear.png'

correlation_like:
  $module_name: cosmopipe.likelihood.likelihood
  $module_class: BaseLikelihood
  #$setup: [correlation_survey_estimator.execute, correlation_data.execute, correlation_plotting.execute]
  $setup: [correlation_data.execute]
  $modules: [hankel, projection]

gaussiancov:
  $module_name: cosmopipe.theory.galaxy_clustering.gaussian_covariance
  volume: e'1380.**3'
  data_load: True
  #xlim: ${data.xlim}

projection:
  $module_name: cosmopipe.survey_selection.projection

model:
  $module_name: cosmopipe.theory.galaxy_clustering.linear_model
  FoG: gaussian
  data_shotnoise: 1e3

hankel:
  $module_name: cosmopipe.theory.projections.hankel_transform
