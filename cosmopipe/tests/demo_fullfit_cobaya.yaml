main:
  #execute: [params, boltzmann, model, mockcov, mockdata, minuit, profiles_plotting]
  #execute: [params, boltzmann, model, mockcov, mockdata, cobaya, plotting]
  #execute: [params, boltzmann, model, mockcov, mockdata, like]
  execute: [plotting]

one:
  module_name: cosmopipe.samplers.cobaya.sampler
  module_class: CobayaSampler
  modules: [like]
  sampler: evaluate

cobaya:
  module_name: cosmopipe.samplers.cobaya.sampler
  module_class: CobayaSampler
  modules: [like]
  sampler: mcmc
  max_tries: 10000
  Rminus1_stop: 0.01
  Rminus1_cl_stop: 0.1
  save_cosmomc: '_samples/samples_fullfit'

minuit:
  module_name: cosmopipe.samplers.minuit.minuit
  module_class: MinuitProfiler
  modules: [like]
  torun: [migrad]

params:
  module_name: cosmopipe.parameters.parameterisation
  common_parameters:
    configblock_load: [linear_parameters.yaml]
    cosmological_parameters:
      Omega_c:
        value: 0.25
        prior:
          dist: uniform
          limits: [0.2,0.4]
        latex: '\Omega_{c}'
      Omega_b:
        value: 0.05
        prior:
          dist: uniform
          limits: [0.02,0.08]
        latex: '\Omega_{b}'
      h:
        value: 0.7
        prior:
          dist: uniform
          limits: [0.4,0.9]
        latex: 'h'
      n_s:
        value: 0.96
        prior:
          dist: uniform
          limits: [0.8,1.2]
        latex: 'n_s'
      sigma8:
        value: 0.8
        prior:
          dist: uniform
          limits: [0.7,1.1]
        latex: '\sigma_{8}'

boltzmann:
  module_name: cosmopipe.theory.boltzmann
  transfer_function: eisenstein_hu
  z: 1.0

mockcov:
  module_name: cosmopipe.theory.gaussian_covariance
  module_class: GaussianPkCovariance
  kedges:
    min: 0.02
    max: 0.3
    step: 0.01
  shotnoise: 1e3
  volume: 1e10
  projs: [ell_0, ell_2, ell_4]

mockdata:
  module_name: cosmopipe.data.mock_data_vector
  mean: true
  seed: 42
  save_txt: '_data/data.txt'

profiles_plotting:
  module_name: cosmopipe.samplers.plotting
  module_class: ProfilesPlotting
  toplot:
    - plot_aligned_stacked:
        truths: value
        filename: _plots/aligned_stacked_fullfit.png

plotting:
  module_name: cosmopipe.samplers.plotting
  module_class: SamplesPlotting
  #samples_keys: [samples_cobaya]
  samples_files: [_samples/samples_fullfit.txt]
  save_stats: [_plots/stats_fullfit.tex]
  burnin: 0.2
  toplot:
    - plot_corner:
        truths: value
        filename: _plots/corner_fullfit.png
#    - plot_gelman_rubin:
#        filename: _plots/gelman_rubin.png

like:
  module_name: cosmopipe.likelihood.likelihood
  module_class: GaussianLikelihood
  setup: [boltzmann, effectap, projection]
  execute: [boltzmann, effectap, model, projection]

model:
  module_name: cosmopipe.theory.linear_model
  FoG: gaussian

effectap:
  module_name: cosmopipe.theory.effect_ap
  module_class: EffectAP
  Omega_m: 0.3

projection:
  module_name: cosmopipe.theory.projection
  module_class: DataVectorProjection
