main:
  execute: [params, boltzmann, model, mockcov, mockdata, cobaya, plotting]

cobaya:
  module_name: cosmopipe.samplers.cobaya.sampler
  module_class: CobayaSampler
  modules: [like]
  sampler: polychord

params:
  module_name: cosmopipe.parameters.parameterisation
  common_parameters:
    configblock_load: [cosmological_parameters.yaml]
    galaxy_bias:
      b1:
        value: 1.0
        fixed: false
        prior:
          dist: uniform
          limits: [0.5, 1.5]
        ref:
          dist: uniform
          limits: [0.99, 1.01]
        proposal: 0.01
        latex: b_{1}
      As:
        value: 0.0
        fixed: false
        prior:
          dist: uniform
          limits: [-1, 1]
        ref:
          dist: uniform
          limits: [-0.1, 0.1]
        proposal: 0.005
        latex: A_{s}
      sigmav:
        value: 4.0
        fixed: false
        prior:
          dist: uniform
          limits: [1, 6]
        ref:
          dist: uniform
          limits: [3.8, 4.2]
        proposal: 0.5
        latex: \sigma_{v}

boltzmann:
  module_name: cosmopipe.theory.boltzmann
  z: 1.0

mockcov:
  module_name: cosmopipe.theory.gaussian_covariance
  module_class: GaussianPkCovariance
  kedges:
    min: 0.02
    max: 0.3
    step: 0.01
  shotnoise: 1e3
  volume: 1e10
  projs: [ell_0, ell_2, ell_4]

mockdata:
  module_name: cosmopipe.data.mock_data_vector
  mean: False
  seed: 42

plotting:
  module_name: cosmopipe.samplers.plotting
  module_class: SamplesPlotting
  toplot:
    - plot_corner:
        parameters: [galaxy_bias.b1, galaxy_bias.sigmav, galaxy_bias.As]
        truths: [1.0, 4.0, 0.0]
        filename: _plots/corner.png

like:
  module_name: cosmopipe.likelihood.likelihood
  module_class: GaussianLikelihood
  modules: [model, projection]

model:
  module_name: cosmopipe.theory.linear_model
  FoG: gaussian

projection:
  module_name: cosmopipe.theory.projection
  module_class: DataVectorProjection
