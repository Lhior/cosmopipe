# This an internal pipeline:
# - setup template cosmology
# - compute Gaussian covariance matrix with Kaiser model
# - build mock data vector (here just taken as the theory)
# - run MCMC
# this for two different ranges of the quadrupole (kmax = 0.2 and kmax = 0.3 h/Mpc)

data_dir: _data
samples_dir: _samples
plots_dir: _plots

main:
  $execute: [primordial, mpi, plotting]
  #$execute: [primordial, emcee]
  #$execute: [primordial, one]
  #$execute: [plotting]
  $[survey_selection.zeff]: 1.0

mpi:
  $module_name: pypescript
  $module_class: MPIPipeline
  $nprocs_per_task: 2
  #$execute: [cobaya]
  $execute: [emcee]
  #$execute: [zeus]
  #$execute: [dynesty]
  $configblock_iter:
    mockdata.xlim: [{'ell_0': [0.02, 0.3], 'ell_2': [0.02, 0.2], 'ell_4': [0.02, 0.2]}, {'ell_0': [0.02, 0.3], 'ell_2': [0.02, 0.3], 'ell_4': [0.02, 0.2]}]
    mockdata.save_txt: e'lambda i:"${data_dir}/data_{:d}.txt".format(i)'
    cobaya.save: ["f'${samples_dir}/samples_cobaya_0.txt'", "f'${samples_dir}/samples_cobaya_1.txt'"]
    emcee.save: ["f'${samples_dir}/samples_emcee_0.txt'", "f'${samples_dir}/samples_emcee_1.txt'"]
    zeus.save: ["f'${samples_dir}/samples_zeus_0.txt'", "f'${samples_dir}/samples_zeus_1.txt'"]
    dynesty.save: ["f'${samples_dir}/samples_dynesty_0.txt'", "f'${samples_dir}/samples_dynesty_1.txt'"]
  $datablock_key_iter:
    likelihood.samples: [samples_0, samples_1]

emcee:
  $module_name: cosmopipe.samplers.ensemble.emcee
  $module_class: EmceeSampler
  $modules: [like]
  check_every: 100
  eigen_gr_stop: 0.02
  save: f'${samples_dir}/samples_emcee.txt'

zeus:
  $module_name: cosmopipe.samplers.ensemble.zeus
  $module_class: ZeusSampler
  $modules: [like]
  eigen_gr_stop: 0.02
  save: f'${samples_dir}/samples_zeus.txt'

dynesty:
  $module_name: cosmopipe.samplers.nested.dynesty
  $module_class: DynestySampler
  $modules: [like]
  save: f'${samples_dir}/samples_dynesty.txt'

cobaya:
  $module_name: cosmopipe.samplers.cobaya.sampler
  $module_class: CobayaSampler
  $modules: [like]
  sampler:
    mcmc:
      max_tries: 10000
      Rminus1_stop: 0.01
      Rminus1_cl_stop: 0.07
  save: f'${samples_dir}/samples_cobaya.txt'

one:
  $module_name: cosmopipe.samplers.evaluate
  $module_class: EvaluateSampler
  $modules: [like]

minuit:
  $module_name: cosmopipe.samplers.profiler.minuit
  $module_class: MinuitProfiler
  $modules: [like]
  torun: [migrad]
  save: f'${samples_dir}/minuit.npy'

primordial:
  $module_name: cosmopipe.theory.primordial.primordial
  engine: eisenstein_hu
  compute: pk_m

xdata:
  $module_name: cosmopipe.data_vector.synthetic_data_vector
  edges:
    min: 0.02
    max: 0.3
    step: 0.01
  projs: e'[{'space':'power','mode':'multipole','proj':ell} for ell in [0,2,4]]'
  xlim: $&{mockdata.xlim}

mockcov:
  $module_name: cosmopipe.theory.galaxy_clustering.gaussian_covariance
  $module_class: GaussianCovariance
  volume: 1e10

mockdata:
  $module_name: cosmopipe.data_vector.mock_data_vector
  mean: True
  mean_load: True
  seed: 42
  xlim: {'ell_0': [0.02, 0.3], 'ell_2': [0.02, 0.3], 'ell_4': [0.02, 0.2]}
  save: f'${data_dir}/data.txt'

plotting:
  $module_name: cosmopipe.samplers.plotting
  $module_class: SamplesPlotting
  samples_load: ${mpi.$datablock_key_iter.likelihood.samples}
  #samples_files: ${mpi.$configblock_iter.cobaya.save}
  #samples_files: ${mpi.$configblock_iter.emcee.save}
  #save_stats: [f'${plots_dir}/stats_0.tex', f'${plots_dir}/stats_1.tex']
  labels: ['$\ell = 2$, $k < 0.2 \; h/\mathrm{Mpc}$','$\ell = 2$, $k < 0.3 \; h/\mathrm{Mpc}$']
  burnin: 0.3
  toplot:
    - plot_1d:
        parameter: galaxy_bias.b1
        truth: value
        filename: f'${plots_dir}/plot_b1.png'
    - plot_corner:
        parameters: [galaxy_bias.b1, galaxy_bias.sigmav, galaxy_bias.As]
        truths: value
        filename: f'${plots_dir}/corner.png'
#    - plot_gelman_rubin:
#        filename: f'${plots_dir}/gelman_rubin.png'

like:
  $module_name: cosmopipe.likelihood.likelihood
  $module_class: GaussianLikelihood
  $setup: [model.execute, xdata.execute, mockcov.execute, projection.execute, mockdata.execute]
  $execute: [model, projection]

model:
  $module_name: cosmopipe.theory.galaxy_clustering.linear_model
  FoG: gaussian
  data_shotnoise: 1e3

projection:
  $module_name: cosmopipe.survey_selection.projection
