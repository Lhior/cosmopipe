main:
  execute: [params, perturbations, background, model, mockcov, mockdata, cobaya, samples_plotting, params_compressed, cobaya_compressed, samples_compressed_plotting]
  #execute: [params, perturbations, background, model, mockcov, mockdata, cobaya, samples_plotting]
  #execute: [params_compressed, cobaya_compressed, samples_compressed_plotting]
  #execute: [samples_compressed_plotting]

one_compressed:
  module_name: cosmopipe.samplers.cobaya.sampler
  module_class: CobayaSampler
  modules: [like_compressed]
  requirements: [background]
  likelihood:
    bao.sdss_dr12_consensus_bao: null
    sn.pantheon: null
  theory:
    classy:
      stop_at_error: True
      extra_args:
        N_ncdm: 1
        N_ur: 2.0328
  sampler:
    evaluate:

cobaya_compressed:
  module_name: cosmopipe.samplers.cobaya.sampler
  module_class: CobayaSampler
  modules: [like_compressed]
  requirements: [background]
  likelihood:
    bao.sdss_dr12_consensus_bao: null
    sn.pantheon: null
  theory:
    classy:
      stop_at_error: True
      extra_args:
        N_ncdm: 1
        N_ur: 2.0328
  sampler:
    mcmc:
      max_tries: 10000
      Rminus1_stop: 0.01
      Rminus1_cl_stop: 0.1
  save_cosmomc: _samples/samples_bao_compressed

minuit_compressed:
  module_name: cosmopipe.samplers.minuit.minuit
  module_class: MinuitProfiler
  modules: [params_compressed, like_compressed]
  torun: [migrad]

cobaya:
  module_name: cosmopipe.samplers.cobaya.sampler
  module_class: CobayaSampler
  modules: [params, like]
  sampler:
    mcmc:
      max_tries: 10000
      Rminus1_stop: 0.01
      Rminus1_cl_stop: 0.1
  save_cosmomc: _samples/samples_bao_templatefit

minuit:
  module_name: cosmopipe.samplers.minuit.minuit
  module_class: MinuitProfiler
  modules: [params, like]
  torun: [migrad]

params:
  module_name: cosmopipe.parameters.parameterisation
  common_parameters:
    configblock_load: [cosmological_parameters.yaml, linear_parameters.yaml]
    effect_ap:
      qpar:
        value: 1
        prior:
          dist: uniform
          limits: [0.9,1.1]
        latex: 'q_{\parallel}'
      qperp:
        value: 1
        prior:
          dist: uniform
          limits: [0.9,1.1]
        latex: 'q_{\perp}'
    galaxy_rsd.fsig:
      value: 0.42538
      prior:
        dist: uniform
        limits: [0.3,0.5]
      latex: 'f\sigma_{8}'
    background:
      scale_factor:
        value: 0.5
        fixed: True

params_compressed:
  module_name: cosmopipe.parameters.parameterisation
  common_parameters:
    cosmological_parameters:
      omega_c:
        value: 0.1225
        prior:
          dist: uniform
          limits: [0.0735,0.1715]
        latex: '\omega_{c}'
      omega_b:
        value: 0.0245
        prior:
          dist: norm
          loc: 0.0245
          scale: 0.0005
        latex: '\omega_{b}'
      h:
        value: 0.7
        prior:
          dist: uniform
          #limits: [0.4,1]
          limits: [0.6,0.8]
        latex: 'h'
      n_s:
        value: 0.96
        fixed: True
    background:
      scale_factor:
        value: 0.5
        fixed: True

perturbations:
  module_name: cosmopipe.theory.linear_perturbations
  transfer_function: eisenstein_hu

background:
  module_name: cosmopipe.theory.background

mockcov:
  module_name: cosmopipe.theory.gaussian_covariance
  module_class: GaussianPkCovariance
  kedges:
    min: 0.02
    max: 0.3
    step: 0.01
  shotnoise: 1e3
  volume: 1e10
  projs: [ell_0, ell_2, ell_4]

mockdata:
  module_name: cosmopipe.data.mock_data_vector
  mean: true
  seed: 42
  save_txt: '_data/data.txt'

like_compressed:
  module_name: cosmopipe.likelihood.fromsamples
  module_class: GaussianLikelihoodFromSamples
  samples_file: _samples/samples_bao_templatefit.txt
  parameters: [effect_ap.qpar, effect_ap.qperp]
  #parameters: [effect_ap.qperp]
  burnin: 0.2
  #modules: [background, bao]
  modules: [bao]

like:
  module_name: cosmopipe.likelihood.likelihood
  module_class: GaussianLikelihood
  setup: [isoscaling, projection]
  execute: [isoscaling, model, projection]

model:
  module_name: cosmopipe.theory.linear_model
  FoG: gaussian

projection:
  module_name: cosmopipe.theory.projection
  module_class: DataVectorProjection

isoscaling:
  module_name: cosmopipe.theory.isotropic_scaling
  pivot: 0.333

perturbations:
  module_name: cosmopipe.theory.linear_perturbations
  transfer_function: eisenstein_hu

background:
  module_name: cosmopipe.theory.background

bao:
  module_name: cosmopipe.theory.galaxy_bao
  module_class: GalaxyBAO
  Omega_c: 0.25
  Omega_b: 0.05
  h: 0.7

profiles_plotting:
  module_name: cosmopipe.samplers.plotting
  module_class: ProfilesPlotting
  save_stats: [_plots/stats_bao_templatefit.tex]
  toplot:
    - plot_aligned_stacked:
        truths: value
        filename: _plots/aligned_stacked_bao_templatefit.png

samples_plotting:
  module_name: cosmopipe.samplers.plotting
  module_class: SamplesPlotting
  samples_files: [_samples/samples_bao_templatefit.txt]
  save_stats: [_plots/stats_bao_templatefit.tex]
  burnin: 0.2
  toplot:
    - plot_corner:
        truths: value
        filename: _plots/corner_bao_templatefit.png

samples_compressed_plotting:
  module_name: cosmopipe.samplers.plotting
  module_class: SamplesPlotting
  #samples_keys: [samples]
  #samples_files: [_samples/samples_bao_compressed.txt]
  save_stats: [_plots/stats_bao_compressed.tex]
  burnin: 0.2
  toplot:
    - plot_corner:
        truths: value
        parameters: [cosmological_parameters.omega_c, cosmological_parameters.h]
        filename: _plots/corner_bao_compressed.png
#    - plot_gelman_rubin:
#        filename: _plots/gelman_rubin.png
